str(nycflights)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
nycflights = as.data.frame(nycflights)
str (nycflights)
View(nycflights)
assfo_feb_flights = nycnycflights[nycflights$dest == "SFO" & nycflights$month = 2]
assfo_feb_flights = nycnycflights[nycflights$dest == "SFO" & nycflights$month == 2]
assfo_feb_flights = nycflights[nycflights$dest == "SFO" & nycflights$month == 2]
assfo_feb_flights = nycflights[,nycflights$dest == "SFO" & nycflights$month == 2]
assfo_feb_flights = nycflights[nycflights$dest == "SFO" & nycflights$month == 2,]
view(assfo_feb_flights)
View(assfo_feb_flights)
length(assfo_feb_flights)
nrow(assfo_feb_flights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(nycflights, aes (x= dep_delay)
)
ggplot(nycflights, aes (x= dep_delay))
ggplot(nycflights, aes (x= dep_delay)) + geom_histogram()
ggplot(nycflights, aes (x= dep_delay)) + geom_histogram() +stat_bin(30)
ggplot(nycflights, aes (x= dep_delay)) + geom_histogram()
ggplot(nycflights, aes (x= dep_delay)) + geom_histogram()
ggplot(nycflights, aes (x= dep_delay)) + geom_histogram()
?ggplot
summarise(assfo_feb_flights)
nrow(assfo_feb_flights)
typeof(assfo_feb_flights)
summarise(as.data.frame(assfo_feb_flights))
ggplot(assfo_feb_flights, aes( x= arr_delay)) +geom_histogram()
rdu_flights nycflights %>%filter (dest = "RDU")
rdu_flights =nycflights %>%filter (dest = "RDU")
rdu_flights =nycflights %>%filter (dest == "RDU")
rdu_flights %>% summarise(mean_dd = mean(dep_delay), sd_d = sd(dep_delay), n = n())
nrow(rdu_flights)
assfo_feb_flights %>% group_by(carrier) %>% summarise( meadian_sfo = median(arr_delay), IQR(arr_delay))
nycflights %>% Filter(origin == "NYC") %>% group_by( month) %>% summarise( avg_dept_delay = mean(dep_delay))
nycflights %>% filter(origin == "NYC") %>% group_by( month) %>% summarise( avg_dept_delay = mean(dep_delay))
nycflights %>% filter(origin == "NYC") %>% group_by( month)
nycflights  %>% group_by( month)  %>% filter(origin == "NYC")
nycflights  %>% group_by( month)
nycflights$origin == "NYC"
nycflights %>% group_by( month) %>% summarise( avg_dept_delay = mean(dep_delay))
nycflights %>% group_by( month) %>% summarise( avg_dept_delay = mean(dep_delay)) %>% arrange(avg_dept_delay )
nycflights %>% group_by( month) %>% summarise( avg_dept_delay = mean(dep_delay)) %>% arrange( desc(avg_dept_delay) )
nycflights %>% group_by( month) %>% summarise( avg_dept_delay = median(dep_delay)) %>% arrange( desc(avg_dept_delay) )
nycflights$delayed = nycflights[nycflights$dep_delay != 0, ]
nycflights$delayed = nycflights[, nycflights$dep_delay != 0 ]
is.na(nycflights$dep_delay)
is.na(nycflights$dep_delay) == TRUE
anyNA(nycflights$dep_delay)
nycflights = nycflights %>% mutate(dep_type = ifelse (dep_delay < 5, "On time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_ret = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_ret))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
nycflights$dep_type == "on time"
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "On time") / n()) %>%
arrange(desc(ot_dep_rate))
nycflights %>% mutate( avg_speed = distance/ air_time) %>% arrange(desc (avg_speed))
nycflights %>% mutate( avg_speed = distance/ air_time)%>% group_by(tailnum) %>% arrange(desc (avg_speed))
nycflights %>% group_by(tailnum) %>% summarise(max_speed = max(distance/time) ) %>%arrange(desc (avg_speed))
nycflights %>% mutate( avg_speed=distance/ air_time)
nycflights = nycflights %>% mutate( avg_speed=distance/ air_time)
nycflights %>% group_by(tailnum) %>% summarise(max_speed = max(avg_speed) ) %>%arrange(desc (avg_speed))
nycflights %>% summarise(max_speed = max(avg_speed) ) %>%arrange(desc (avg_speed))
nycflights %>% summarise(max_speed = max(avg_speed) ) %>%arrange(desc (avg_speed))
nycflights %>% group_by(tailnum) %>% summarise(max_speed = max(avg_speed) )
nycflights %>% group_by(tailnum) %>% summarise(max_speed = max(avg_speed) ) %>% arrange(desc(avg_speed))
nycflights %>% group_by(tailnum) %>% summarise(max_speed = max(avg_speed) ) %>% arrange(desc(max_speed))
ggplot(nycflights, aes(x = avg_speed, y = distance)) +geom_point()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(arr_delay < 5, "on time", "delayed"))
data("nycflights")
View(nycflights)
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 5, "on time", "delayed"))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>% filter (dep_type = "on time")
nycflights %>% filter (dep_type == "on time")
nycflights %>% filter (dep_type == "on time" & arr_type == "deplayed")
nycflights %>% filter (dep_type == "on time")
nycflights %>% filter (dep_type == "on time" & arr_type == "deplayed")
nycflights %>% filter (dep_type == "on time" & arr_type == "delayed")
nycflights %>% filter (dep_type == "delayed" & arr_type == "on time")  %>% summarise( fnalal = count(dep_type)/ n())
nycflights %>% filter (dep_type == "delayed" & arr_type == "on time")  %>% summarise( fnalal = count(minute)/ n())
nycflights %>% filter (dep_type == "delayed" & arr_type == "on time")  %>% summarise( fnalal = sum (count(minute))/ n())
test = nycflights %>% filter (dep_type == "delayed" & arr_type == "on time")
View(test)
test = nycflights %>% filter (dep_type == "delayed" & arr_type == "delayed")
test1 = nycflights %>% filter (dep_type == "delayed" & arr_type == "on time")
nrow(test1)/ nrow(nycflights)
nrow(test) / nrow(nycflights %>% filter (dep_type == "delayed")
)
nrow(test) / nrow(nycflights %>% filter (dep_type == "delayed"))
nrow(nycflights %>% filter (arr_type == "on time")) / rnow(nycflights)
nrow(nycflights %>% filter (arr_type == "on time")) / rnow (nycflights)
nrow(nycflights %>% filter (arr_type == "on time")) / nrow (nycflights)
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
kobe_basket = as.data.frame(kobe_basket)
View(kobe_basket)
nrow(kobe_basket)
kobe_streak <- calc_streak(kobe_basket$shot)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
View(kobe_streak)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(coin_outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,
prob = c(0.2, 0.8))
table(sim_unfair_coin)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
sim_basket <- sample(shot_outcomes, size = 100, replace = TRUE, prob = c(0.45, 0.55))
kobe_streak <- calc_streak(sim_basket)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
library(ggplot2)
library(dplyr)
load("brfss2013.RData")
new_dataset_2 = brfss2013 %>% select('ssbsugar', 'ssbfrut2', 'diabage2',
'insulin', 'bldsugar', 'cvdinfr4',
'cvdcrhd4', 'cvdstrk3')
view(new_dataset_2)
View(new_dataset_2)
new_dataset_3 = brfss2013 %>% select('sleptim1', 'cvdinfr4',
'cvdcrhd4', 'cvdstrk3')
View(new_dataset_3)
typeof(list($weight2))
typeof(list(brfss2013$weight2))
str(brfss2013$vegeda1_)
summary(brfss2013$vegeda1_)
fruit_set = brfss2013 %>% select( 'fruitju1', 'fruit1', 'fvbeans', 'fvgreen',
'fvorang', 'vegetab1')
View(fruit_set)
nrow(fruit_set)
fruit_set_2 = na.omit(fruit_set)
nrow(fruit_set_2)
View(fruit_set_2)
table(fruit_set_2)
ggplot(data = fruit_set_2, aes (x = fruitju1)) + geom_histogram()
ggplot(data = fruit_set_2, aes (x = fruitju1)) + geom_histogram(30)
ggplot(data = fruit_set_2, aes (x = fruitju1)) + geom_histogram()
ggplot(data = fruit_set_2, aes ( fruitju1)) + geom_histogram(30)
ggplot(data = fruit_set_2, aes ( fruitju1)) + geom_histogram()
ggplot(data = fruit_set_2, aes ( fruitju1)) + geom_histogram(bins = 30)
ggplot(data = fruit_set_2, aes ( fruitju1)) + geom_histogram(bins = 300)
ggplot(data = fruit_set_2, aes ( fruitju1)) + geom_histogram(bins = 10)
View(brfss2013)
View(brfss2013)
exercise_set = brfss2013 %>% select ('exerany2', 'exract11', 'exeroft1', 'exerhmm1',
'exract21', 'exeroft2', 'exerhmm2', 'strength')
View(exercise_set)
nrow(na.omit(brfss2013 %>% select ('exerany2') %>% filter ( exerany2 != 0)))
nrow(na.omit(brfss2013 %>% select ('exract11') %>% filter ( exract11 != 0)))
table(exercise_set$exerany2)
typeof(table(exercise_set$exerany2))
x = table(exercise_set$exerany2)
x = c(23242, 22323)
barplot(x)
table(exercise$exerany2,exercise$X_bmi5cat )
exercise = new_dateset %>% filter( hlthpln1 == "Yes", genhlth = "Very good")
barplot(table(exercise$exerany2,exercise$X_bmi5cat ), beside = TRUE,
xlab = "plot heading",
col = c("red","green"),
main = "ppl say good health and genhealth good but bmi")
legend("topleft",
c("exercies_Yes","exercise_No"),
fill = c("red","green"))
exercise = new_dateset %>% filter( hlthpln1 == "Yes")
new_dateset = brfss2013 %>% select('X_state', 'genhlth', 'hlthpln1', 'X_bmi5cat', 'exerany2')
exercise = new_dateset %>% filter( hlthpln1 == "Yes")
exercise = new_dateset %>% filter( hlthpln1 == "Yes", genhlth = "Very good")
barplot(table(exercise$exerany2,exercise$X_bmi5cat ), beside = TRUE,
xlab = "plot heading",
col = c("red","green"),
main = "ppl say good health and genhealth good but bmi")
legend("topleft",
c("exercies_Yes","exercise_No"),
fill = c("red","green"))
barplot(x, names.arg = c ("cc", "ff"))
col_names = c('exerany2', 'exract11', 'exeroft1', 'exerhmm1',
'exract21', 'exeroft2', 'exerhmm2', 'strength')
row_num <- function(x) {
return (nrow(na.omit(brfss2013 %>% select (x) %>% filter ( x != 0))))
}
row_num('exerany2')
lapply(col_names, row_num)
nrows_needed = lapply(col_names, row_num)
barplot(nrows_needed, names.arg = col_names)
row_num <- function(x) {
return (as.numeric(nrow(na.omit(brfss2013 %>% select (x) %>% filter ( x != 0)))))
}
nrows_needed = lapply(col_names, row_num)
barplot(nrows_needed, names.arg = col_names)
nrows_needed
barplot(list(nrows_needed), names.arg = col_names)
x = c (1,2,3,4,5,6,7,8)
barplot(x, names.arg = col_names)
x
typeof(x)
typeof(nrows_needed)
nrows_needed = as.vector(nrows_needed)
barplot(list(nrows_needed), names.arg = col_names)
barplot((nrows_needed), names.arg = col_names)
nrows_needed
x[1]
nrows_needed[1]
nrows_needed[2][1]
nrows_needed[2][3]
nrows_needed[3][3]
nrows_needed[3][1]
unlist(nrows_needed)
barplot(unlist(nrows_needed), names.arg = col_names)
barplot(unlist(nrows_needed), names.arg = col_names,  cex.names = .8)
barplot(unlist(nrows_needed), names.arg = col_names,  cex.names = .5)
barplot(unlist(nrows_needed), names.arg = col_names,  cex.names = .6)
barplot(unlist(nrows_needed), names.arg = col_names,  cex.names = .6, horiz=F)
barplot(unlist(nrows_needed), names.arg = col_names,  cex.names = .6, horiz=F, las =2)
barplot(unlist(nrows_needed), names.arg = col_names,  cex.names = .6,
horiz=F, las =2, col = "skyblue")
head(new_dataset_2)
